library(tidyverse)
library(rstan)
library(shinystan)
library(patchwork)
rm(list=ls())
load("pair_paramests.RData")

##Cheat by taking the max-prob answer rather than a representative sample to make these more distinctive: the data are limited, at least try to give inferobs a fighting chance. Of course, if it works, have to try relaxing this...
allwinner_choices <- function(triadfit){
predsamples <- as.data.frame(rstan::extract(triadfit,permute=TRUE))%>%
    select(starts_with("triad"))%>%
    gather(triad,choice)%>%
    group_by(triad)%>%
    summarize(targ=sum(choice==1)/n(),
              comp=sum(choice==2)/n(),
              decoy=sum(choice==3)/n())%>%#Pretty sure this labelling is right but for the love of all things scientific do double check it.
    ungroup()%>%mutate(triad=substr(triad,7,nchar(triad)))
return(
    sapply(1:nrow(predsamples),function(i){prefs <- predsamples[i,c("targ","comp","decoy")]; return(which(prefs==max(prefs))[1]);}) #danger,nonrandom tiebreaker on max (should be rare?)
    )
}

allords <- allwinner_choices(triadfit_allords)
noords <- allwinner_choices(triadfit_noords)
matchords <- allwinner_choices(triadfit_matchords)

stop("why")

goodness_score <- function(triadfit,actualchoices){
predsamples <- as.data.frame(rstan::extract(triadfit,permute=TRUE))%>%
    select(starts_with("triad"))%>%
    gather(triad,choice)%>%
    group_by(triad)%>%
    summarize(targ=sum(choice==1)/n(),
              comp=sum(choice==2)/n(),
              decoy=sum(choice==3)/n())%>%#Pretty sure this labelling is right but for the love of all things scientific do double check it.
    ungroup()%>%mutate(triad=substr(triad,7,nchar(triad)))

triadsdata.df$choicenumber = as.numeric(ordered(triadsdata.df$rolechosen,levels=c("targ","comp","decoy")))

##If you have human data in triadsdata.df, pull it here, thus:
## for(i in 1:nrow(triadsdata.df)){
##     predsamples[predsamples$triad==paste0("choice.",i),"obs"] <- triadsdata.df[i,"choicenumber"]
## }
##Otherwise:
predsamples$obs <- actualchoices #passed arg

for(i in 1:nrow(predsamples)){
    predsamples[i,"log_p_obs"] <- log(predsamples[i,as.numeric(predsamples[i,"obs"])+1])
}

return(sum(predsamples$log_p_obs))
}

rm(list=setdiff(ls(),c("allords","noords","matchords","goodness_score")))
load(file="pair_paramests.RData")

fitgoodness.df <- data.frame();
for(choiceset in c("allords","matchords","noords")){
    for(afit in c("triadfit_allords","triadfit_matchords","triadfit_noords")){
        fitgoodness.df <- rbind(fitgoodness.df, data.frame(choiceset=choiceset,afit=afit, score=goodness_score(eval(parse(text=afit)),eval(parse(text=choiceset)))))
    }
}
    
View(fitgoodness.df)##Passes! Phew.
